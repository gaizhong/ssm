<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这个namespace + 下面的id 就是一个完整的路径，在dao层我们写了完整的路径之后mybatis就是映射这个文件中的相关sql语句 -->
<mapper namespace="mybatis">
	<sql id="Example_Where_Clause" >
	<!-- <where> -->
		<if test=" id !=null">
		and id=#{id}
		</if>
		<if test=" name !=null">
		and name=#{name}
		</if>
		<if test=" ename !=null" >
		and ename=#{ename}
		</if>
		<if test=" password !=null">
		and password=#{password}
		</if>
		<if test=" id !=null">
		and birthday=#{birthday}
		</if>
		<if test=" age !=null">
		and age=#{age}
		</if>
		<if test=" photo !=null">
		and photo=#{photo}
		</if>
		<if test=" work !=null">
		and work=#{work}
		</if>
		<if test=" sex !=null">
		and sex=#{sex}
		</if>
		<if test=" address !=null">
		and address=#{address}
		</if>
		<if test=" rank !=null">
		and rank=#{rank}
		</if>
		<!-- </where> -->
	
	</sql>
	<!-- parameterType就是你接受的参数的类型， -->
	<!-- 添加用户信息,注册成员时三个必填项和一个生成UUID为主键的成员 -->
	<insert id="insertUser" parameterType="entity.User">
		insert into User(id,name,ename,password)
		values(#{id},#{name},#{ename},#{password})
	</insert>

	<!-- 查询返回的是 list<map> -->
	<!-- resultType 就是返回查询结果的类型，而如果是resultMap=则返回的就是你定义的javabean -->
	<select id="queryUser" parameterType="entity.User" resultType="entity.User">
		select * from user   
		<where>
		 <include refid="Example_Where_Clause" />
		</where>
	</select>

</mapper>